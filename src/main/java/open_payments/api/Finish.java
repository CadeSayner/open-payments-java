package open_payments.api;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
/**
 * Indicates how the client instance can receive an indication that interaction has finished at the AS.
 */
public class Finish {
        /**
         * The callback method that the AS will use to contact the client instance.
         */
        String method = "redirect"; // this is the only permitted value according to the api spec
        /**
         * Indicates the URI that the AS will either send the RO to after interaction or send an HTTP POST request.
         */
        String uri;
        /**
         * Unique value to be used in the calculation of the “hash” query parameter sent to the callback URI, must be sufficiently random to be unguessable by an attacker. MUST be generated by the client instance as a unique value for this request.
         */
        String nonce;

        /**
         * 
         * @param uri Indicates the URI that the AS will either send the RO to after interaction or send an HTTP POST request.
         * @param nonce Unique value to be used in the calculation of the “hash” query parameter sent to the callback URI, must be sufficiently random to be unguessable by an attacker. MUST be generated by the client instance as a unique value for this request.
         */
        Finish(String uri, String nonce){
            this.uri = uri;
            this.nonce = nonce;
        } 

        public String toString(){
            Gson gson = new GsonBuilder().create();
            return gson.toJson(this);
        }
}
